{
  "version": 3,
  "sources": ["../../../lib/errors/aggregate-error.js"],
  "sourcesContent": ["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * A wrapper for multiple Errors\n *\n * @param {Error[]} [errors] Array of errors\n *\n * @property errors {Error[]}\n */\nclass AggregateError extends BaseError {\n  constructor(errors) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString() {\n    const message = `AggregateError of:\\n${\n      this.errors.map(error =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/mg, '  ')\n            : String(error).replace(/^/mg, '    ').substring(2)\n        \n      ).join('\\n')\n    }\\n`;\n    return message;\n  }\n}\n\nmodule.exports = AggregateError;\n"],
  "mappings": ";AAEA,MAAM,YAAY,QAAQ;AAS1B,6BAA6B,UAAU;AAAA,EACrC,YAAY,QAAQ;AAClB;AACA,SAAK,SAAS;AACd,SAAK,OAAO;AAAA;AAAA,EAGd,WAAW;AACT,UAAM,UAAU;AAAA,EACd,KAAK,OAAO,IAAI,WACd,UAAU,OACN,8BACA,iBAAiB,iBACf,OAAO,OAAO,QAAQ,OAAO,IAAI,QAAQ,OAAO,QAChD,OAAO,OAAO,QAAQ,OAAO,QAAQ,UAAU,IAErD,KAAK;AAAA;AAET,WAAO;AAAA;AAAA;AAIX,OAAO,UAAU;",
  "names": []
}
